openapi: '3.0.3'

info:
  title: Sample-API-Backend
  version: '1.0'

servers:
  - url: http://localhost:3001
    description: Local Development Server

components:
  schemas:
    SuccessfulResponseMessage:
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
    SuccessfulResponseReturn:
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          description: dynamic entity (eg. token, queried object)
    CommonError:
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Missing required field/s
    User:
      description: User entity schema
      properties:
        username: 
          type: string
          description: Entity immutable primary key
        password:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - "username"
        - "password"
        - "email"
        - "firstName"
        - "lastName"
  securitySchemes:
    bearerAuth:
      type: http
      description: Simple bearer auth
      scheme: bearer
      bearerFormat: JWT

paths:
  /user/{id}:
    get:
      tags:
        - "General"
      description: Returns a User entity with the matching username
      parameters:
        - in: path
          name: username 
          required: true
          schema:
            type: string
          description: Id of the User object to be searched
      responses:
        '200':
          description: Successful Response 
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean 
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      password:
                        type: string
                      email:
                        type: string
                      firstName: 
                        type: string
                      lastName:
                        type: string
        '400':
          description: Missing id to be searched
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Missing query id
        '404':
          description: Search returned no matching results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Search returned no matching results
  /user/:
    post:
      tags:
        - "General"
      description: Create a new User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponseMessage"
              example:
                success: true
                message: User added successfully 
        "400":
          description: Missing field/s
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Missing field/s
        "404":
          description: Database Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Database access error
        "409":
          description: Attempted to add duplicate User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Attempted to add duplicate User
    put:
      tags:
        - "General"
      description: Updates a User
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponseMessage"
              example:
                success: true
                message: User credentials updated successfully
        "400":
          description: Malformed request. Missing required field
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Missing required field to find User to be updated
        "401":
          description: Given token invalid. Operation unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Operation unauthorized. Failed to process request
        "404":
          description: Failure to locate user to delete or failure on db operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: "User not found. Cannot update."
    delete:
      tags:
        - "General"
      description: Delete a User 
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: username 
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Response. User was deleted in the db.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulResponseMessage"
              example:
                success: true
                message: Successfully deleted User
        "400":
          description: Malformed request. Missing required field or token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: "Missing required field/s"
        "401":
          description: Given token invalid. Operation unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: Operation unauthorized. Failed to process request
        "403":
          description: Attempting to delete your own account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: "Cannot delete logged-in User"
        "404":
          description: Failure to locate user to delete or failure on db operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommonError"
              example:
                success: false
                message: "User not found. Cannot delete with no matches."

  /user/login:
    post:
      tags:
        - "Authentication"
      description: Authenticate a user with valid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string 
                password:
                  type: string
              required:
                - "username"
                - "password"
      responses:
        "200":
          description: Successful Response. Includes token for authorization.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        "400":
          description: Malformed request. Missing required fields on the body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "404":
          description: Invalid credentials. Username not in db or password is incorrect 
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
  
  /user/logout:    
    post:
      tags:
        - "Authentication"
      description: Invalidate given token
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful Response. Token cannot be used anymore.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                
        "400":
          description: Malformed request. Missing token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

                example:
                  success: false
                  message: "Missing Required Fields"
        "401":
          description: Given token invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

                example:
                  success: false
                  message: "Invalid Token Provided"
          

tags:
  - name: General
  - name: Authentication
